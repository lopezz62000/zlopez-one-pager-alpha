{"ast":null,"code":"var _jsxFileName = \"/Users/zlopez/Desktop/OnePager-Alpha/zlopez-one-pager-alpha/components/home.tsx\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport React from 'react';\nimport { Box, Heading, Text, Divider, Flex, Image } from '@chakra-ui/core';\nimport { Header } from './Header';\nimport { getAllPublicOnePagerData, getAllPublicOnePagerTags } from '../data/dataService';\n// Previously selected filter tag\nvar selectedTag = \"No Filter\";\n/** Renders the home component. */\n\nexport const Home = () => {\n  const [onePagers, setOnePagers] = React.useState([]); // React hook to load data on first render\n\n  React.useEffect(() => {\n    getAllPublicOnePagerData().then(result => {\n      setOnePagers(result);\n    });\n  }, []); // Retrieve tags from data service\n\n  var tags = getAllPublicOnePagerTags(); // Retrieves previously selected filter tag upon reload\n\n  if (false) {\n    selectedTag = localStorage.getItem(\"selectedTag\") || \"No Filter\";\n  } // Event handler for Filter Select box\n\n\n  function handleFilterSelect(e) {\n    localStorage.setItem(\"selectedTag\", e.target.value);\n    window.location.reload(false);\n  }\n\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"One Pager Alpha\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    d: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    w: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    as: \"h1\",\n    size: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Welcome to One Pager Alpha! edited by Zach Lopez\"), __jsx(Heading, {\n    as: \"h2\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"View active OnePagers\"), __jsx(\"select\", {\n    name: \"tagFilter\",\n    id: \"tagFilter\",\n    onChange: handleFilterSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, selectedTag), tags.map(tag => tag.includes(selectedTag) ? \"\" : __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 66\n    }\n  }, tag))), __jsx(Box, {\n    h: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), __jsx(OnePagerLinks, {\n    onePagers: onePagers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst OnePagerLinks = ({\n  onePagers\n}, selectedTag) => {\n  // Code below has been replaced with filterOnePager function\n  return __jsx(React.Fragment, null, onePagers.map(onePagerData => filterOnePager(onePagerData)));\n}; // Filter function that only displays onePagerData if it follows filter criteria\n\n\nfunction filterOnePager(onePagerData) {\n  if (selectedTag == \"No Filter\" || onePagerData.industryTags.includes(selectedTag)) {\n    return __jsx(Flex, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, __jsx(Flex, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, __jsx(Image, {\n      paddingRight: \"3\",\n      alignSelf: \"center\",\n      htmlHeight: \"45px\",\n      htmlWidth: \"45px\",\n      src: onePagerData.imageLink,\n      fallbackSrc: \"https://www.pinclipart.com/picdir/big/44-444153_blank-shield-images-pictures-logo-circle-clip-art.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    })), __jsx(Flex, {\n      align: \"center\",\n      key: onePagerData.companyName,\n      marginBottom: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: \"/[onePagerSlug]\",\n      as: `/${onePagerData.url}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, onePagerData.companyName)), __jsx(Text, {\n      margin: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, onePagerData.briefDescription))));\n  } else return null;\n}","map":{"version":3,"sources":["/Users/zlopez/Desktop/OnePager-Alpha/zlopez-one-pager-alpha/components/home.tsx"],"names":["Head","Link","React","Box","Heading","Text","Divider","Flex","Image","Header","getAllPublicOnePagerData","getAllPublicOnePagerTags","selectedTag","Home","onePagers","setOnePagers","useState","useEffect","then","result","tags","localStorage","getItem","handleFilterSelect","e","setItem","target","value","window","location","reload","map","tag","includes","OnePagerLinks","onePagerData","filterOnePager","industryTags","imageLink","companyName","url","briefDescription"],"mappings":"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","sourcesContent":["import Head from 'next/head';\nimport Link from 'next/link';\nimport React from 'react';\nimport { Box, Heading, Text, Divider, Flex, Image } from '@chakra-ui/core';\n\nimport { Header } from './Header';\nimport { getAllPublicOnePagerData, getAllPublicOnePagerTags } from '../data/dataService';\nimport { OnePagerPublicData } from '../model/model';\n\n// Previously selected filter tag\nvar selectedTag = \"No Filter\";\n\n/** Renders the home component. */\nexport const Home = () => {\n  const [onePagers, setOnePagers]: [OnePagerPublicData[], any] = React.useState(\n    []\n  );\n\n  // React hook to load data on first render\n  React.useEffect(() => {\n    getAllPublicOnePagerData().then((result) => {\n      setOnePagers(result);\n    });\n  }, []);\n\n  // Retrieve tags from data service\n  var tags = getAllPublicOnePagerTags();\n\n  // Retrieves previously selected filter tag upon reload\n  if (typeof window !== 'undefined') { \n    selectedTag = localStorage.getItem(\"selectedTag\" ) || \"No Filter\";\n  }\n\n  // Event handler for Filter Select box\n  function handleFilterSelect(e) {\n    localStorage.setItem(\"selectedTag\", e.target.value);\n    window.location.reload(false);\n  }\n\n  return (\n    \n    <Box>\n      <Head>\n        <title>One Pager Alpha</title>\n        <link rel='icon' href='/favicon.png' />\n      </Head>\n\n      <Header />\n\n      <Box d='flex' justifyContent='center'>\n        <Box w='xl'>\n          <Heading as='h1' size='xl'>\n            Welcome to One Pager Alpha! edited by Zach Lopez\n          </Heading>\n\n          <Heading as='h2' size='md'>\n            View active OnePagers\n          </Heading>\n          <select name=\"tagFilter\" id=\"tagFilter\" onChange={handleFilterSelect}>\n            {(<option>{selectedTag}</option>)}\n            {tags.map(tag => ((tag.includes(selectedTag) ? \"\" : (<option>{tag}</option>))))}\n          </select>\n          <Box h='10px'></Box>\n          <Divider />\n          <OnePagerLinks onePagers={onePagers} />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\ntype OnePagerLinksProps = {\n  onePagers: OnePagerPublicData[];\n};\n\nconst OnePagerLinks = ({ onePagers }: OnePagerLinksProps, selectedTag: string) => {\n  // Code below has been replaced with filterOnePager function\n  return (\n    <>\n      {onePagers.map((onePagerData: OnePagerPublicData) => filterOnePager(onePagerData))}\n    </>\n  );\n};\n\n// Filter function that only displays onePagerData if it follows filter criteria\nfunction filterOnePager(onePagerData: OnePagerPublicData) {\n  if(selectedTag == \"No Filter\" || onePagerData.industryTags.includes(selectedTag)) {\n    return (\n      <Flex align=\"center\">\n        <Flex align=\"center\">\n        <Image paddingRight=\"3\" alignSelf=\"center\" htmlHeight=\"45px\" htmlWidth=\"45px\" src={onePagerData.imageLink} fallbackSrc=\"https://www.pinclipart.com/picdir/big/44-444153_blank-shield-images-pictures-logo-circle-clip-art.png\" />\n        </Flex>\n        <Flex align=\"center\" key={onePagerData.companyName} marginBottom='10px'>\n          <Box>\n            <Link href='/[onePagerSlug]' as={`/${onePagerData.url}`}>\n              <a>{onePagerData.companyName}</a>\n            </Link>\n            <Text margin='0'>{onePagerData.briefDescription}</Text>\n          </Box>\n        </Flex>\n      </Flex>\n    )\n  }\n  else return null;\n}\n"]},"metadata":{},"sourceType":"module"}