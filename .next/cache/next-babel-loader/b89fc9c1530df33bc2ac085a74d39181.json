{"ast":null,"code":"var _jsxFileName = \"/Users/zlopez/Desktop/OnePager-Alpha/zlopez-one-pager-alpha/components/ContentCard.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Heading, Skeleton } from '@chakra-ui/core';\n\n/**\n * Renders basic card for displaying content.\n * Display skeltons if isLoading.\n * */\nexport const ContentCard = ({\n  title,\n  isLoading = false,\n  children\n}) => {\n  return __jsx(Box, {\n    flex: \"flex\",\n    width: \"xl\",\n    shadow: \"lg\",\n    borderWidth: \"1px\",\n    borderColor: \"grey\",\n    rounded: \"lg\",\n    p: \"0\",\n    margin: \"20px auto\",\n    bg: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, title && __jsx(React.Fragment, null, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    as: \"h2\",\n    size: \"md\",\n    m: \"0\",\n    p: \"20px 10px 0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, title))), __jsx(Box, {\n    p: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, isLoading ? __jsx(LoadingSkeletons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 34\n    }\n  }) : children));\n};\n/** Renders loading skeletons. */\n\nconst LoadingSkeletons = () => {\n  return __jsx(React.Fragment, null, __jsx(Skeleton, {\n    h: \"15px\",\n    marginBottom: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), __jsx(Skeleton, {\n    h: \"15px\",\n    marginBottom: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), __jsx(Skeleton, {\n    h: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), ' ');\n};","map":{"version":3,"sources":["/Users/zlopez/Desktop/OnePager-Alpha/zlopez-one-pager-alpha/components/ContentCard.tsx"],"names":["Box","Heading","Skeleton","ContentCard","title","isLoading","children","LoadingSkeletons"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,OAAd,EAAuBC,QAAvB,QAAuC,iBAAvC;;AAQA;;;;AAIA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAC1BC,EAAAA,KAD0B;AAE1BC,EAAAA,SAAS,GAAG,KAFc;AAG1BC,EAAAA;AAH0B,CAAD,KAIH;AACtB,SACE,MAAC,GAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAC,IAFR;AAGE,IAAA,MAAM,EAAC,IAHT;AAIE,IAAA,WAAW,EAAC,KAJd;AAKE,IAAA,WAAW,EAAC,MALd;AAME,IAAA,OAAO,EAAC,IANV;AAOE,IAAA,CAAC,EAAC,GAPJ;AAQE,IAAA,MAAM,EAAC,WART;AASE,IAAA,EAAE,EAAC,OATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGF,KAAK,IACJ,4BACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,EAAE,EAAC,IAAZ;AAAiB,IAAA,IAAI,EAAC,IAAtB;AAA2B,IAAA,CAAC,EAAC,GAA7B;AAAiC,IAAA,CAAC,EAAC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CADF,CADF,CAZJ,EAoBE,MAAC,GAAD;AAAK,IAAA,CAAC,EAAC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeC,SAAS,GAAG,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA0BC,QAAlD,CApBF,CADF;AAwBD,CA7BM;AA+BP;;AACA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,SACE,4BACE,MAAC,QAAD;AAAU,IAAA,CAAC,EAAC,MAAZ;AAAmB,IAAA,YAAY,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,QAAD;AAAU,IAAA,CAAC,EAAC,MAAZ;AAAmB,IAAA,YAAY,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,QAAD;AAAU,IAAA,CAAC,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAGiC,GAHjC,CADF;AAOD,CARD","sourcesContent":["import { Box, Heading, Skeleton } from '@chakra-ui/core';\n\ntype ContentCardProps = {\n  title?: string;\n  isLoading: boolean;\n  children: any;\n};\n\n/**\n * Renders basic card for displaying content.\n * Display skeltons if isLoading.\n * */\nexport const ContentCard = ({\n  title,\n  isLoading = false,\n  children,\n}: ContentCardProps) => {\n  return (\n    <Box\n      flex='flex'\n      width='xl'\n      shadow='lg'\n      borderWidth='1px'\n      borderColor='grey'\n      rounded='lg'\n      p='0'\n      margin='20px auto'\n      bg='white'\n    >\n      {title && (\n        <>\n          <Box>\n            <Heading as='h2' size='md' m='0' p='20px 10px 0'>\n              {title}\n            </Heading>\n          </Box>\n        </>\n      )}\n      <Box p='10px'>{isLoading ? <LoadingSkeletons /> : children}</Box>\n    </Box>\n  );\n};\n\n/** Renders loading skeletons. */\nconst LoadingSkeletons = () => {\n  return (\n    <>\n      <Skeleton h='15px' marginBottom='10px'></Skeleton>\n      <Skeleton h='15px' marginBottom='10px'></Skeleton>\n      <Skeleton h='20px'></Skeleton>{' '}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}