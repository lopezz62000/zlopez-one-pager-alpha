{"ast":null,"code":"import { ONE_PAGERS_ALL_DATA_MAP, ONE_PAGERS_PUBLIC_DATA_ARRAY, ONE_PAGERS_PUBLIC_TAGS_ARRAY } from './onepagers';\n/**\n * This is a mock service that doesn't call a backend, and\n * the resolve time is meant to mock a delay for retrieving data\n * remotely. Feel free to alter this resolve time to render the\n * page faster during development.\n **/\n\nvar RESOLVE_TIME_MS = 1000;\n/** Return all public One Pager data. */\n\nexport var getAllPublicOnePagerData = function getAllPublicOnePagerData() {\n  return Promise.resolve(ONE_PAGERS_PUBLIC_DATA_ARRAY);\n};\n/** Return all public One Pager tags. */\n\nexport var getAllPublicOnePagerTags = function getAllPublicOnePagerTags() {\n  return ONE_PAGERS_PUBLIC_TAGS_ARRAY;\n};\n/** Return a single One Pager with all data. */\n\nexport var getOnePagerData = function getOnePagerData(url) {\n  return new Promise(function (resolve) {\n    return setTimeout(function () {\n      return resolve(ONE_PAGERS_ALL_DATA_MAP.get(url));\n    }, RESOLVE_TIME_MS);\n  });\n};","map":{"version":3,"sources":["/Users/zlopez/Desktop/OnePager-Alpha/zlopez-one-pager-alpha/data/dataService.ts"],"names":["ONE_PAGERS_ALL_DATA_MAP","ONE_PAGERS_PUBLIC_DATA_ARRAY","ONE_PAGERS_PUBLIC_TAGS_ARRAY","RESOLVE_TIME_MS","getAllPublicOnePagerData","Promise","resolve","getAllPublicOnePagerTags","getOnePagerData","url","setTimeout","get"],"mappings":"AACA,SACEA,uBADF,EAEEC,4BAFF,EAGEC,4BAHF,QAIO,aAJP;AAMA;;;;;;;AAMA,IAAMC,eAAe,GAAG,IAAxB;AAEA;;AACA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B;AAAA,SACtCC,OAAO,CAACC,OAAR,CAAgBL,4BAAhB,CADsC;AAAA,CAAjC;AAGP;;AACA,OAAO,IAAMM,wBAAwB,GAAG,SAA3BA,wBAA2B;AAAA,SACxCL,4BADwC;AAAA,CAAjC;AAGP;;AACA,OAAO,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD;AAAA,SAC7B,IAAIJ,OAAJ,CAAY,UAACC,OAAD;AAAA,WACVI,UAAU,CAAC;AAAA,aAAMJ,OAAO,CAACN,uBAAuB,CAACW,GAAxB,CAA4BF,GAA5B,CAAD,CAAb;AAAA,KAAD,EAAkDN,eAAlD,CADA;AAAA,GAAZ,CAD6B;AAAA,CAAxB","sourcesContent":["import { OnePagerData, OnePagerPublicData} from '../model/model';\nimport {\n  ONE_PAGERS_ALL_DATA_MAP,\n  ONE_PAGERS_PUBLIC_DATA_ARRAY,\n  ONE_PAGERS_PUBLIC_TAGS_ARRAY,\n} from './onepagers';\n\n/**\n * This is a mock service that doesn't call a backend, and\n * the resolve time is meant to mock a delay for retrieving data\n * remotely. Feel free to alter this resolve time to render the\n * page faster during development.\n **/\nconst RESOLVE_TIME_MS = 1000;\n\n/** Return all public One Pager data. */\nexport const getAllPublicOnePagerData = (): Promise<OnePagerPublicData[]> =>\n  Promise.resolve(ONE_PAGERS_PUBLIC_DATA_ARRAY);\n\n/** Return all public One Pager tags. */\nexport const getAllPublicOnePagerTags = (): Array<String> =>\nONE_PAGERS_PUBLIC_TAGS_ARRAY;\n\n/** Return a single One Pager with all data. */\nexport const getOnePagerData = (url: string): Promise<OnePagerData> =>\n  new Promise((resolve) =>\n    setTimeout(() => resolve(ONE_PAGERS_ALL_DATA_MAP.get(url)), RESOLVE_TIME_MS)\n  );\n"]},"metadata":{},"sourceType":"module"}